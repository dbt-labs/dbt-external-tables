
# HEY! This file is used in the dbt-external-tables integrations tests with CircleCI.
# You should __NEVER__ check credentials into version control. Thanks for reading :)

integration_tests:
  target: postgres
  outputs:

    redshift:
      type: "redshift"
      host: "{{ env_var('REDSHIFT_HOST') }}"
      user: "{{ env_var('REDSHIFT_USER') }}"
      pass: "{{ env_var('DBT_ENV_SECRET_REDSHIFT_PASS') }}"
      dbname: "{{ env_var('REDSHIFT_DATABASE') }}"
      port: "{{ env_var('REDSHIFT_PORT') | as_number }}"
      schema: "{{ env_var('REDSHIFT_SCHEMA') }}"
      threads: 5
      
    snowflake:
      type: "snowflake"
      account: "{{ env_var('SNOWFLAKE_ACCOUNT') }}"
      user: "{{ env_var('SNOWFLAKE_USER') }}"
      password: "{{ env_var('DBT_ENV_SECRET_SNOWFLAKE_PASS') }}"
      role: "{{ env_var('SNOWFLAKE_ROLE') }}"
      database: "{{ env_var('SNOWFLAKE_DATABASE') }}"
      warehouse: "{{ env_var('SNOWFLAKE_WAREHOUSE') }}"
      schema: "{{ env_var('SNOWFLAKE_SCHEMA') }}"
      threads: 10

    bigquery:
      type: "bigquery"
      method: "service-account-json"
      project: "{{ env_var('BIGQUERY_PROJECT') }}"
      dataset: "{{ env_var('BIGQUERY_SCHEMA') }}"
      threads: 10
      keyfile_json:
        "{{ env_var('BIGQUERY_KEYFILE_JSON') | as_native}}"
      job_retries: 3

    databricks:
      type: spark
      method: odbc
      port: 443
      driver: "{{ env_var('ODBC_DRIVER') }}"
      host: "{{ env_var('DATABRICKS_TEST_HOST') }}"
      endpoint: "{{ env_var('DATBRICKS_TEST_ENDPOINT') }}"
      token: "{{ env_var('DATABRICKS_TOKEN') }}"
      schema: dbt_external_tables_integration_tests_databricks

    synapse:
      type: synapse
      driver: "ODBC Driver 17 for SQL Server"
      port: 1433
      host: "{{ env_var('SYNAPSE_TEST_SERVER') }}.sql.azuresynapse.net"
      database: "{{ env_var('SYNAPSE_TEST_DBNAME') }}"
      authentication: CLI
      schema: dbt_external_tables_integration_tests_synapse
      threads: 1

    azuresql:
      type: sqlserver
      driver: "ODBC Driver 17 for SQL Server"
      port: 1433
      host: "{{ env_var('AZURESQL_TEST_SERVER') }}"
      database: "{{ env_var('AZURESQL_TEST_DBNAME') }}"
      authentication: CLI
      schema: dbt_external_tables_integration_tests_azuresql
      threads: 1
